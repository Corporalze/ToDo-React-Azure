trigger:
  branches:
    include:
      - master

variables:
  - group: bicepVariables 

parameters:
  - name: environment
    type: string
    default: 'Dev'
    values:
      - 'Dev'
      - 'Test'
      - 'Prod'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: InstallDependencies
  displayName: 'Install Dependencies and Cache'
  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: '$(HOME)/.npm'
      displayName: 'Cache npm packages'

    - script: npm install
      displayName: 'Install Dependencies'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'node_modules'
        artifact: 'node_modules'

- job: PreCommitChecks
  dependsOn: InstallDependencies
  displayName: 'Pre-commit Checks'
  steps:
    - download: current
      artifact: 'node_modules'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: npm run lint
      displayName: 'Run Linting'

    - script: npm run format
      displayName: 'Run Prettier'

- job: Build
  dependsOn: PreCommitChecks
  displayName: 'Build and Package'
  steps:
    - download: current
      artifact: 'node_modules'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: npm run build
      displayName: 'Build Project'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '.next'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/nextjsapp.zip'
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/nextjsapp.zip'
        artifact: 'drop'

- job: IntegrationTests
  dependsOn: Build
  displayName: 'Run Integration Tests'
  steps:
    - download: current
      artifact: 'node_modules'

    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: npm run test
      displayName: 'Run Integration Tests'

- deployment: Deploy
  displayName: 'Deploy to $(environment) Environment'
  environment: $(environment)
  dependsOn: IntegrationTests
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: 'drop'
          
        - task: AzureWebApp@1
          inputs:
            azureSubscription: '$(azureServiceConnection)'
            appName: '$(webAppName)'
            package: '$(Pipeline.Workspace)/drop/nextjsapp.zip'
